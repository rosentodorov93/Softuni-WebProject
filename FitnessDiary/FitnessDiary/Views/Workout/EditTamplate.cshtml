@using FitnessDiary.Infrastructure.Data.Enums
@model EditTamplateViewModel

<div class="d-flex justify-content-center">
    <form asp-controller="Workout" asp-action="EditTamplate" method="post">
        <div class="px-2 py-2 border border-3" >
            <div>
                <h5 class="text-center" style="color:#ff6347">Edit Workout</h5>
                <hr />
                <div class="form-horizontal">
                    <input id="tamplateId" type="hidden" value="@Model.Id" />
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label asp-for="Name" class="control-label">Workout Name</label>
                            <input asp-for="Name" type="text" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="Description" class="control-label">Description</label>
                            <input asp-for="Description" type="text" class="form-control" />
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel-body">
                <table class="table table-striped table-responsive">
                    <thead>
                        <tr>
                            <td>Exercise Name </td>
                            <td>Body Part </td>
                            <td>Sets</td>
                        </tr>
                        <tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Exercises.Count; i++)
                        {
                            @Html.HiddenFor(modelItem => Model.Exercises[i].Id)
                            <tr>
                                <td>@Html.EditorFor(modelItem => Model.Exercises[i].Name) </td>
                                <td>
                                    @{
                                        var names = new List<SelectListItem>();
                                        foreach (var name in Enum.GetNames<BodyPartType>())
                                        {
                                            names.Add(new SelectListItem() { Text = name, Value = name });
                                        }

                                    }
                                        @Html.DropDownListFor(modelItem => Model.Exercises[i].BodyPart, @names.ToArray())
                                    
                                </td>
                                <td>@Html.EditorFor(modelItem => Model.Exercises[i].SetCount)</td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-primary mr-2">Edit Workout </button>
                <button type="button" class="btn btn-primary mr-2" onclick="addExercise()">Add exercise </button>
                <button type="button" class="btn btn-primary mr-2" onclick="removeExercise()">Remove exercise </button>
                
            </div>
        </div>
    </form>
</div>

<!--Add Exercise Modal-->
<div class="modal fade" id="addExerciseModal">
    <div class="modal-dialog modal-lg" style=" width: 900px !important;">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Add New Exercise</h4>
            </div>

            <div class="modal-body">

                <h5 style="color:#ff6347">Exercise Details</h5>
                <hr />
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-2">
                            Exercise Name
                        </label>
                        <div class="col-md-4">
                            <input type="text" id="exrciseName" name="name" class="form-control" />
                        </div>
                        <label class="control-label col-md-2">
                            Body Part
                        </label>
                        <div class="col-md-4">
                            <select id="bodyPart" class="form-control">
                                @foreach (var name in Enum.GetNames<BodyPartType>())
                                {
                                    <option value="@name">@name</option>
                                }
                            </select>
                        </div>
                        <label class="control-label col-md-2">
                            Number of Sets
                        </label>
                        <div class="col-md-4">
                            <input type="text" id="sets" name="sets" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="reset" class="btn btn-default" id="closeAdd">Close</button>
                    <button id="save" type="button" class="btn btn-danger">Save Exercise</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Remove Exercise Modal-->
<div class="modal fade" id="removeExerciseModal">
    <div class="modal-dialog modal-lg" style=" width: 900px !important;">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Remove Exercise</h4>
            </div>

            <div class="modal-body">

                <h5 style="color:#ff6347">Exercise Details</h5>
                <hr />
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-4">
                            <select id="exercise" class="form-control">
                                @foreach (var exercise in Model.Exercises)
                                {
                                    <option value="@exercise.Id">@exercise.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="reset" class="btn btn-default" id="closeRemove">Close</button>
                    <button id="remove" type="button" class="btn btn-danger">Remove Exercise</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>
        function addExercise() {
            $("#addExerciseModal").modal('show');
        }
        $("#save").click(function(e) {
            e.preventDefault();

            if ($.trim($("#exrciseName").val()) == "" || $.trim($("#sets").val()) == "") {
                return alert("All fields are required!")
            }
            if ($.trim($("#sets").val()) <= 0) {
                return alert("Sets must be positive number!")
            }

            let exerciseName = $("#exrciseName").val();

            if (exerciseName.length < 3 || exerciseName.length > 70) {
                return alert("Name field must be between 3 and 70 characters long!")
            }

            let bodyPart = $('#bodyPart').find(":selected").val();
            let sets = $("#sets").val();
            let tamplateId = $("#tamplateId").val();

            let data = {
                WorkoutId: tamplateId,
                ExerciseName: exerciseName,
                BodyPart: bodyPart,
                SetCount: sets
            }

            $.ajax({ 
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                method: 'POST',
                url: "/Workout/AddExerciseToTamplate",
                data: JSON.stringify(data),
                success: function(result) {
                    window.location = `${tamplateId}`;
                },
                error: function(error) {
                    window.location = `${tamplateId}`;
                }
            });
            clearItem();
            $("#removeExerciseModal").modal('hide');
        })

        function clearItem() {
            $("#exrciseName").val('');
            $("#bodyPart").val('');
            $("#sets").val('');
        }

        function removeExercise() {
            $("#removeExerciseModal").modal('show');
        }

        $("#remove").click(function(e) {
            e.preventDefault();

            let exerciseId = $('#exercise').find(":selected").val();
            let tamplateId = $("#tamplateId").val();

            let removedata = {
                ExerciseId: exerciseId,
                TamplateId: tamplateId
            };

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                method: 'POST',
                url: "/Workout/RemoveExerciseFromTamplate",
                data: JSON.stringify(removedata),
                success: function(result) {
                    window.location = `${tamplateId}`;
                }
            });
        });
         $('#closeAdd').click(function() {
            $("#addExerciseModal").modal('hide');
        })
        $('#closeRemove').click(function() {
            $("#removeExerciseModal").modal('hide');
        })
    </script>
}
